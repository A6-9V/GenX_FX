version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.simple
    ports:
      - "8080:8080"
    env_file:
      - .env.development
    environment:
      - APP_ENV=development
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      - redis
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  discord_bot:
    build:
      context: .
      dockerfile: Dockerfile.simple
    command: python services/discord_bot.py
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile.simple
    command: python services/telegram_bot.py
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  notifier:
    build:
      context: .
      dockerfile: Dockerfile.simple
    command: python services/notifier.py
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.simple
    command: python services/scheduler.py
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  websocket_feed:
    build:
      context: .
      dockerfile: Dockerfile.simple
    command: python services/websocket_feed.py
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: genxdb_fx_dev
      POSTGRES_USER: genx_user
      POSTGRES_PASSWORD: genx_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genx_user -d genxdb_fx_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: genx-fx-network
